# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

# https://peps.python.org/pep-0621/
[project]
name = "pyconify"
dynamic = ["version"]
description = "iconify for python. Universal icon framework"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "BSD-3-Clause" }
authors = [{ name = "Talley Lambert", email = "talley.lambert@gmail.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: BSD License",
    "Typing :: Typed",
]
dependencies = ["requests"]

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]
dev = ["black", "ipython", "mypy", "pdbpp", "rich", "ruff", "types-requests"]

[project.urls]
homepage = "https://github.com/pyapp-kit/pyconify"
repository = "https://github.com/pyapp-kit/pyconify"

# https://beta.ruff.rs/docs/rules/
[tool.ruff]
line-length = 88
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
pydocstyle = { convention = "numpy" }
select = [
    "W",    # style warnings
    "E",    # style errors
    "F",    # flakes
    "D",    # pydocstyle
    "I",    # isort
    "UP",   # pyupgrade
    "S",    # bandit
    "C4",   # comprehensions
    "B",    # bugbear
    "A001", # Variable shadowing a python builtin
    "TC",   # flake8-type-checking
    "TID",  # flake8-tidy-imports
    "RUF",  # ruff-specific rules
    "PERF", # performance
    "SLF",  # private access
]
ignore = [
    "D100", # Missing docstring in public module
    "D401", # First line should be in imperative mood (remove to opt in)
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "S101", "E501", "SLF"]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true
enable_incomplete_feature = ["Unpack"]

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
filterwarnings = ["error"]

# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "\\.\\.\\.",
    "raise NotImplementedError()",
]

[tool.coverage.run]
source = ["pyconify"]
